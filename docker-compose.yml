version: '3.8'

services:
  # Redis for Celery message broker
  redis:
    image: redis:7-alpine
    container_name: dupligone-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dupligone-network

  # FastAPI application
  app:
    build: .
    container_name: dupligone-app
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./static:/app/static
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - dupligone-network

  # Celery worker for image processing
  celery-worker:
    build: .
    container_name: dupligone-celery-worker
    command: celery -A tasks.celery_app worker --loglevel=info --concurrency=4 --queues=image_processing,clustering
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - dupligone-network

volumes:
  redis_data:

networks:
  dupligone-network:
    driver: bridge
